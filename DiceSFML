//Uppgift 1

#include <SFML/Graphics.hpp>
#include"DiceSFML.h"
#include<ctime>
#include<iostream>
using namespace std;

#ifdef _DEBUG
#pragma comment(lib, "sfml-window-d.lib")
#pragma comment(lib, "sfml-system-d.lib")
#pragma comment(lib, "sfml-graphics-d.lib")
#else
#pragma comment(lib, "sfml-window.lib")
#pragma comment(lib, "sfml-system.lib")
#pragma comment(lib, "sfml-graphics.lib")
#endif

const int WIDTH = 900;
const int HEIGHT = 600;
int main()
{
	std::srand((unsigned)time(0));
	sf::RenderWindow window(sf::VideoMode(WIDTH, HEIGHT), "DiceSFML");

	sf::Clock clock;
	sf::Time elapsedTimeSinceLastUpdate = sf::Time::Zero;
	sf::Time timePerFrame = sf::seconds(1.0f / 60.0f);

	DiceSFML dice;

	while (window.isOpen())
	{
		sf::Event event;
		while (window.pollEvent(event))
		{
			if (event.type == sf::Event::Closed)
			{
				window.close();
			}
		}


		//elapsedTimeSinceLastUpdate += clock.restart();
		//while (elapsedTimeSinceLastUpdate > timePerFrame)
		//{
		//	elapsedTimeSinceLastUpdate -= timePerFrame;
		//}
		
		if (sf::Keyboard::isKeyPressed(sf::Keyboard::Space))
		{
			dice.toss();
		}

		window.clear();
		window.draw(dice);

		window.display();
	}


	return 0;
}
